import randomBetween from './randomBetween';

//TODO: нормально типизировать как matrix вместо string[][]

interface Seeds {
  easy: string[][];
  medium: string[][];
  hard: string[][];
  evil: string[][];
}

// TODO: заполнить уровни сложности новыми сидами
const SEEDS: Seeds = {
  easy: [
    [
      '......7.35.8..4...6.7..3.4..5136.4.98.25.73.13.4.9285..7.2..9.8...4..5.21.3......',
      '249615783538724196617983245751368429892547361364192857475236918986471532123859674',
    ],
    [
      '...7..6....9.....33.6258.917.25.4...6.13.25.8...9.62.712.8639.44.....3....3..5...',
      '814739625259641873376258491732584169691372548548916237127863954465197382983425716',
    ],
    [
      '6.3..1.2.27...894.9..6........28.754.3..6..9.487.19........4..7.691...83.2.7..5.9',
      '643971825271358946958642371196283754532467198487519632315894267769125483824736519',
    ],
    [
      '6..8.1.5..51.923.4..24..71..26........57.86........23..39..41..8.796.42..6.5.7..3',
      '643871952751692384982435716126349578395728641478156239539284167817963425264517893',
    ],
    [
      '4....2...1.643..5.39.86...4.4.....9.6829.4735.3.....6.2...41.86.1..863.9...2....7',
      '458192673126437958397865214745623891682914735931578462279341586514786329863259147',
    ],
    [
      '8...694.7...5.72....74...9....98.5.42.5.4.7.94.9.56....2...31....86.5...9.127...8',
      '832169457194537286567428391673982514285341769419756823726893145348615972951274638',
    ],
    [
      '.4.9.738.17.2..9.6.9..8...2237...6...1.....3...5...2949...6..2.7.1..5.68.864.2.1.',
      '642917385178253946593684172237849651419526837865731294954168723721395468386472519',
    ],
    [
      '.8...572...5.1.98.97.8.2.538..5....2.6.....3.3....4..564.1.8.97.98.3.5...524...6.',
      '481395726235617984976842153819563472564721839327984615643158297798236541152479368',
    ],
    [
      '..4..296.59.6...2...3.7...194..67.38.........36.21..792...4.7...3...1.86.783..2..',
      '784132965591684327623975841942567138817493652365218479256849713439721586178356294',
    ],
    [
      '63.95..74.7...31....47.6......198.....5...9.....572......4.93....78...1.45..37.98',
      '632951874578243169914786532263198745785364921149572683826419357397825416451637298',
    ],
  ],
  medium: [
    [
      '.....3..519..5482..5.1.9.4.5......72..9...3..74......9.8.4.2.9..2693..589..5.....',
      '674283915193654827852179643531896472269745381748321569385412796426937158917568234',
    ],
    [
      '.96.28...82....1..5.7..4.....5....1...86.72...4....3.....8..7.3..1....92...74.56.',
      '396128475824576139517934628265483917138697254749251386652819743471365892983742561',
    ],
    [
      '.4.162.......5..69..3..9.1...2...35.1.6.2.9.8.54...7...2.4..6..79..1.......295.3.',
      '549162873217853469683749512972684351136527948854931726321478695795316284468295137',
    ],
    [
      '..78...31.16....493...5..7....2...84..5...3..68...7....6..2...747....92.92...84..',
      '257894631816732549394156278139265784745981362682347195563429817478513926921678453',
    ],
    [
      '.3..1....2.436...8.75..93..5...2.1.3....4....3.7.9...4..96..58.8...746.9....5..2.',
      '638712945294365718175489362546827193912543876387196254429631587851274639763958421',
    ],
    [
      '..47.....9..1.4..33......4.46...5..1815...9367..3...85.8......95..9.6..8.....85..',
      '154783692976124853328659147463895721815472936792361485281547369547936218639218574',
    ],
    [
      '..5.7......8.5.74342.8......3...7..2.52.1.37.7..3...6......1.27269.8.4......2.9..',
      '395174286618259743427863519836547192952618374741392865584931627269785431173426958',
    ],
    [
      '.5..41..2....2......25....86.1...285.9.....1.584...3.68....76......3....4..86..5.',
      '958341762746928531312576948671493285293685417584712396839157624165234879427869153',
    ],
    [
      '96.1.3..2.....7...5.3.....8.318..2.....319.....7..236.3.....1.4...9.....2..4.5.83',
      '968153472142687935573294618431876259625319847897542361356728194784931526219465783',
    ],
    [
      '..28...3.1.872...4..6.91.....7..2....5.3.7.8....5..7.....13.4..3...742.8.1...89..',
      '472856139198723564536491827847612395951347682623589741289135476365974218714268953',
    ],
  ],
  hard: [
    [
      '......45..4..7...2..8.52.1...5218.....7...2.....5479...8.32.5..9...8..7..64......',
      '129863457543971862678452319495218736817639245236547981781326594952184673364795128',
    ],
    [
      '...8.2.......4.87..96.7..24.34.....25.......92.....71.47..2.69..29.8.......7.9...',
      '345812976712946835968375124134697582587231469296458713471523698629184357853769241',
    ],
    [
      '..6..1.758.....61....63......2.9....46..2..57....1.4......45....94.....673.8..5..',
      '946281375873459612215637948152794863469328157387516429628945731594173286731862594',
    ],
    [
      '.21.9..83...4...1...9..2.....76..1..1.......8..5..14.....9..3...4...5...51..3.82.',
      '421597683758463912639182547297648135164359278385271496872916354943825761516734829',
    ],
    [
      '7..9....36....341...4..8..2.41......2...9...6......93.1..7..2...296....58....2..9',
      '782914653695273418314568792941836527273195846568427931136759284429681375857342169',
    ],
    [
      '2.17.......4.1..75...58...2.......41..2.7.6..61.......7...39...94..6.8.......73.4',
      '251796438864312975379584162598623741432175689617948523785439216943261857126857394',
    ],
    [
      '..451..2..1....7.4..5.8..9.6.....9.....246.....8.....1.7..3.2..4.3....6..2..654..',
      '964517328812693754735482196647158932391246875258379641576834219483921567129765483',
    ],
    [
      '......29..57.2......39..7.6..2..9..8.4..3..2.3..8..4..7.4..51......7.96..18......',
      '186547293957623841423981756572419638841736529369852417794365182235178964618294375',
    ],
    [
      '.398..65.7..35............35...4..3.1.3...5.8.2..7...93............81..5.75..418.',
      '439812657782356941651497823597148236143269578826573419318925764264781395975634182',
    ],
    [
      '....28..66..9....4..3...1..5.....6..96.174.58..7.....9..1...2..2....9..74..76....',
      '179428536625931784843657192584293671962174358317586429791845263256319847438762915',
    ],
  ],
  evil: [
    [
      '..27..4.998......3.....2....96.4......18.57......9.64....5.....5......181.9..83..',
      '652731489987654123413982576296147835341865792875293641738519264524376918169428357',
    ],
    [
      '.7.89...5429.6............3....361...8.....6...175....2............4.8798...71.2.',
      '173892645429365781658417293742936158385124967961758432237689514516243879894571326',
    ],
    [
      '2.53.....4..9...72...........374.8...9..8..6...7.923...........61...7..8.....14.5',
      '275314986436958172981276543163745829592183764847692351358429617614537298729861435',
    ],
    [
      '.....2......5.73.1.52.8....2....9.8...4...7...3.1....5....5.96.7.18.3......2.....',
      '376912854498567321152384679215739486984625713637148295823451967761893542549276138',
    ],
    [
      '.....5.47.8....52...91.......3.54....4..6..8....71.9.......14...15....9.36.2.....',
      '632895147187643529459127368873954612941362785526718934298531476715486293364279851',
    ],
    [
      '.7....25.5.1......6...31...9..8..4.....972.....7..4..9...39...8......7.4.15....6.',
      '379486251581729346624531897956813472148972635237654189462397518893165724715248963',
    ],
    [
      '1..8.....8.....2....9.67..575..2.....3..9..5.....7..833..91.5....1.....6.....6..1',
      '175832694863549217249167835754328169638491752912675483326914578481753926597286341',
    ],
    [
      '..6.5....81....7...52...6.4.....9.7.2..7.1..3.7.8.....9.4...83...7....19....3.5..',
      '496257381813496752752318694341569278285741963679823145924175836537682419168934527',
    ],
    [
      '95........3...5...4..163...2...3.9...1..5..4...6.8...7...697..8...3...5........72',
      '957824361631975824482163795275431986819756243346289517524697138768312459193548672',
    ],
    [
      '.1...3...9.2....8.48.72.......1....3..1.8.7..6....4.......35.16.2....3.4...4...2.',
      '716843259932561487485729631297156843341982765658374192874235916529618374163497528',
    ],
  ],
};

// Преобразовать строку в матрицу 9х9
const matrixFromSeed = (seed: string): string[][] => {
  const matrix = [];
  const seedArray = seed.split('');

  for (let y = 0; y < 9; y++) {
    matrix[y] = seedArray.splice(0, 9);
  }

  return matrix;
};

// // Предсказуемо перемешать переданные строки между друг другом
const shuffleRows = (num: number, rows: string[][]): string[][] => {
  return rows.sort(() => num - 0.5);
};

// // Валидно только перемешивание в рамках трех строк (1-3, 4-6, 7-9)
const shuffleMatrix = (matrix: string[][], random: number): string[][] => {
  return [
    shuffleRows(random, matrix.slice(0, 3)),
    shuffleRows(random, matrix.slice(3, 6)),
    shuffleRows(random, matrix.slice(6)),
  ].flat();
};

// Поворот матрицы
const rotateMatrix = (matrix: string[][]): string[][] => {
  const n = matrix.length;

  // Create a temporary matrix of size n x n
  let t = Array.from(Array(n), () => Array.from(Array(n)));

  for (let i = 0; i < n; i++) {
    for (let j = 0; j < n; j++) {
      // basically matrix[i][j] gets moved to [j][n - (i + 1)]
      // e.g. matrix[0][0] => matrix[0][8] assuming 9x9 matrix
      let ele = matrix[i][j];
      let idx = n - (i + 1);

      t[j][idx] = ele;
    }
  }
  return t;
};

const applyRandomTransforms = (
  matrix: string[][],
  solution: string[][],
): string[][][] => {
  // random позволяет применить одинаковые преобразования для matrix и solution
  const random = Math.random(); // 0.0 ... 1.0
  matrix = shuffleMatrix(matrix, random);
  solution = shuffleMatrix(solution, random);

  if (random > 0.66) {
    return [matrix, solution];
  } else if (random > 0.33) {
    return [rotateMatrix(matrix), rotateMatrix(solution)];
  } else {
    return [
      rotateMatrix(rotateMatrix(matrix)),
      rotateMatrix(rotateMatrix(solution)),
    ];
  }
};

// Взять случайный сид, модифицировать его и вернуть
export type Level = 'easy' | 'medium' | 'hard' | 'evil';
export const getRandomBoard = (level: Level): string[][][] => {
  const seedIdx: number = randomBetween(0, SEEDS[level].length - 1);
  const [seed, solution] = SEEDS[level][seedIdx];

  console.log(seed);
  console.log(solution);
  return applyRandomTransforms(matrixFromSeed(seed), matrixFromSeed(solution));
};
